# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protos/tea_weeds.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='protos/tea_weeds.proto',
  package='',
  syntax='proto3',
  serialized_options=_b('\n\021com.tea_weed.grpc'),
  serialized_pb=_b('\n\x16protos/tea_weeds.proto\"&\n\rDetectRequest\x12\x15\n\x05image\x18\x01 \x01(\x0b\x32\x06.Image\"&\n\x0b\x44\x65tectReply\x12\x17\n\x06result\x18\x01 \x03(\x0b\x32\x07.Result\"G\n\x05Image\x12\x10\n\x08raw_data\x18\x01 \x01(\x0c\x12\r\n\x05width\x18\x02 \x01(\x05\x12\x0c\n\x04high\x18\x03 \x01(\x05\x12\x0f\n\x07\x63hannel\x18\x04 \x01(\x05\"+\n\x06Result\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x13\n\x0bprobability\x18\x02 \x01(\x02\x32=\n\rTeaWeedDetect\x12,\n\nclassifier\x12\x0e.DetectRequest\x1a\x0c.DetectReply\"\x00\x42\x13\n\x11\x63om.tea_weed.grpcb\x06proto3')
)




_DETECTREQUEST = _descriptor.Descriptor(
  name='DetectRequest',
  full_name='DetectRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='image', full_name='DetectRequest.image', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=26,
  serialized_end=64,
)


_DETECTREPLY = _descriptor.Descriptor(
  name='DetectReply',
  full_name='DetectReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='DetectReply.result', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=66,
  serialized_end=104,
)


_IMAGE = _descriptor.Descriptor(
  name='Image',
  full_name='Image',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='raw_data', full_name='Image.raw_data', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='width', full_name='Image.width', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='high', full_name='Image.high', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='channel', full_name='Image.channel', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=106,
  serialized_end=177,
)


_RESULT = _descriptor.Descriptor(
  name='Result',
  full_name='Result',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='Result.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='probability', full_name='Result.probability', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=179,
  serialized_end=222,
)

_DETECTREQUEST.fields_by_name['image'].message_type = _IMAGE
_DETECTREPLY.fields_by_name['result'].message_type = _RESULT
DESCRIPTOR.message_types_by_name['DetectRequest'] = _DETECTREQUEST
DESCRIPTOR.message_types_by_name['DetectReply'] = _DETECTREPLY
DESCRIPTOR.message_types_by_name['Image'] = _IMAGE
DESCRIPTOR.message_types_by_name['Result'] = _RESULT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

DetectRequest = _reflection.GeneratedProtocolMessageType('DetectRequest', (_message.Message,), dict(
  DESCRIPTOR = _DETECTREQUEST,
  __module__ = 'protos.tea_weeds_pb2'
  # @@protoc_insertion_point(class_scope:DetectRequest)
  ))
_sym_db.RegisterMessage(DetectRequest)

DetectReply = _reflection.GeneratedProtocolMessageType('DetectReply', (_message.Message,), dict(
  DESCRIPTOR = _DETECTREPLY,
  __module__ = 'protos.tea_weeds_pb2'
  # @@protoc_insertion_point(class_scope:DetectReply)
  ))
_sym_db.RegisterMessage(DetectReply)

Image = _reflection.GeneratedProtocolMessageType('Image', (_message.Message,), dict(
  DESCRIPTOR = _IMAGE,
  __module__ = 'protos.tea_weeds_pb2'
  # @@protoc_insertion_point(class_scope:Image)
  ))
_sym_db.RegisterMessage(Image)

Result = _reflection.GeneratedProtocolMessageType('Result', (_message.Message,), dict(
  DESCRIPTOR = _RESULT,
  __module__ = 'protos.tea_weeds_pb2'
  # @@protoc_insertion_point(class_scope:Result)
  ))
_sym_db.RegisterMessage(Result)


DESCRIPTOR._options = None

_TEAWEEDDETECT = _descriptor.ServiceDescriptor(
  name='TeaWeedDetect',
  full_name='TeaWeedDetect',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=224,
  serialized_end=285,
  methods=[
  _descriptor.MethodDescriptor(
    name='classifier',
    full_name='TeaWeedDetect.classifier',
    index=0,
    containing_service=None,
    input_type=_DETECTREQUEST,
    output_type=_DETECTREPLY,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_TEAWEEDDETECT)

DESCRIPTOR.services_by_name['TeaWeedDetect'] = _TEAWEEDDETECT

# @@protoc_insertion_point(module_scope)
