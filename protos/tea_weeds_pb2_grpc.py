# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from protos import tea_weeds_pb2 as protos_dot_tea__weeds__pb2


class TeaWeedDetectStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.classifier = channel.unary_unary(
        '/TeaWeedDetect/classifier',
        request_serializer=protos_dot_tea__weeds__pb2.DetectRequest.SerializeToString,
        response_deserializer=protos_dot_tea__weeds__pb2.DetectReply.FromString,
        )


class TeaWeedDetectServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def classifier(self, request, context):
    """Sends a greeting
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TeaWeedDetectServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'classifier': grpc.unary_unary_rpc_method_handler(
          servicer.classifier,
          request_deserializer=protos_dot_tea__weeds__pb2.DetectRequest.FromString,
          response_serializer=protos_dot_tea__weeds__pb2.DetectReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'TeaWeedDetect', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
